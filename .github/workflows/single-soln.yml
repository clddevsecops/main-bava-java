name: Entry Dispatcher

on:
  pull_request:
    branches:
      - main
    paths:
      - 'Java/IMS.BavaServices/**'
      - 'Java/IMS.JavaServices/**'

jobs:
  dispatch:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get list of changed files
        id: files
        uses: actions/github-script@v5
        with:
          script: |
            const pull_number = context.payload.pull_request.number;
            const files = await github.rest.pulls.listFiles({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pull_number
            });
            const changes = files.data.map(file => file.filename);
            const bavaChanged = changes.some(filename => filename.startsWith('Java/IMS.BavaServices'));
            const javaChanged = changes.some(filename => filename.startsWith('Java/IMS.JavaServices'));
            return JSON.stringify({ bavaChanged, javaChanged });
          result-encoding: string
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Output file checks
        run: |
          echo "BAVA Services changed: ${{ fromJson(steps.files.outputs.result).bavaChanged }}"
          echo "JAVA Services changed: ${{ fromJson(steps.files.outputs.result).javaChanged }}"

      - name: Trigger IMS BAVA Service WF
        if: fromJson(steps.files.outputs.result).bavaChanged
        uses: actions/github-script@v5
        with:
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'ims-bava-svcs.yml',
              ref: 'refs/heads/main'
            });
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Trigger IMS JAVA Service WF
        if: fromJson(steps.files.outputs.result).javaChanged
        uses: actions/github-script@v5
        with:
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'ims-java-svcs.yml',
              ref: 'refs/heads/main'
            });
          github-token: ${{ secrets.GITHUB_TOKEN }}

  status-check:
    runs-on: ubuntu-latest
    needs: dispatch
    steps:
      - name: Wait for workflow completion
        id: wait-for-workflow
        uses: octokit/request-action@v2.x
        with:
          route: GET /repos/:owner/:repo/actions/runs/:run_id
          owner: ${{ github.repository_owner }}
          repo: ${{ github.event.repository.name }}
          run_id: ${{ github.run_id }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Check workflow status
        run: |
          status=$(echo "${{ steps.wait-for-workflow.outputs.data }}" | jq -r '.status')
          if [[ "$status" != "completed" ]]; then
            echo "Workflow is not completed yet."
            exit 1
          fi
