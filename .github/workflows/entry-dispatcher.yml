name: Entry Dispatcher

on:
  pull_request:
    branches:
      - main
    paths:
      - 'Java/IMS.BavaServices/**'
      - 'Java/IMS.JavaServices/**'

jobs:
  dispatch:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get list of changed files
        id: get_files
        uses: actions/github-script@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pull_number = context.payload.pull_request.number;
            const files = await github.rest.pulls.listFiles({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pull_number
            });
            const fileList = files.data.map(file => file.filename);
            const bavaChanged = fileList.some(file => file.startsWith('Java/IMS.BavaServices'));
            const javaChanged = fileList.some(file => file.startsWith('Java/IMS.JavaServices'));
            return { bavaChanged, javaChanged };

      - name: Set result as outputs
        run: |
          echo "BAVA_CHANGED=${{ steps.get_files.outputs.bavaChanged }}" >> $GITHUB_ENV
          echo "JAVA_CHANGED=${{ steps.get_files.outputs.javaChanged }}" >> $GITHUB_ENV

      - name: Trigger IMS BAVA Service WF
        if: ${{ env.BAVA_CHANGED }}
        uses: actions/github-script@v3
        with:
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'ims-bava-svcs.yml',
              ref: 'refs/heads/main'
            });

      - name: Trigger IMS JAVA Service WF
        if: ${{ env.JAVA_CHANGED }}
        uses: actions/github-script@v3
        with:
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'ims-java-svcs.yml',
              ref: 'refs/heads/main'
            });
