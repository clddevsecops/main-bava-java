name: Entry Dispatcher

on:
  pull_request:
    branches:
      - main
    paths:
      - 'Java/IMS.BavaServices/**'
      - 'Java/IMS.JavaServices/**'

jobs:
  dispatch:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get list of changed files
        id: files
        uses: actions/github-script@v5  # Ensure using the latest version
        with:
          script: |
            const payload = await github.rest.pulls.listFiles({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,  // Ensure you're using issue.number for PR number
            });
            const changes = payload.data.map(file => file.filename);
            const bavaChanged = changes.some(filename => filename.startsWith('Java/IMS.BavaServices'));
            const javaChanged = changes.some(filename => filename.startsWith('Java/IMS.JavaServices'));
            return { bavaChanged, javaChanged };
          result-encoding: string  # This ensures that the outputs are returned as strings

      - name: Output file checks
        run: |
          echo "BAVA Services changed: ${{ fromJson(steps.files.outputs.result).bavaChanged }}"
          echo "JAVA Services changed: ${{ fromJson(steps.files.outputs.result).javaChanged }}"

      - name: Trigger IMS BAVA Service WF
        if: fromJson(steps.files.outputs.result).bavaChanged
        uses: actions/github-script@v5
        with:
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'ims-bava-svcs.yml',
              ref: 'refs/heads/main'
            });

      - name: Trigger IMS JAVA Service WF
        if: fromJson(steps.files.outputs.result).javaChanged
        uses: actions/github-script@v5
        with:
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'ims-java-svcs.yml',
              ref: 'refs/heads/main'
            });
